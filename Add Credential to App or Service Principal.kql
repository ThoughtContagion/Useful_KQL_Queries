// The query looks for users or service principals that attached an new credential type to application.
// As part of the Nobelium campaign, the attacker added credentials to already existing applications and used the application permissions to extract users' mails.
// See How to: Use the portal to create an Microsoft Entra ID application and service principal that can access resources.
// Reference - https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
// This query was updated from https://github.com/Azure/Azure-Sentinel/tree/master/Hunting%20Queries/Microsoft%20365%20Defender/Privilege%20escalation/Add%20uncommon%20credential%20type%20to%20application%20[Nobelium].yaml
// Updated values change the application name from 'Office 365' to 'Microsoft 365' and added the ReportId property to allow for direct conversion of the query to a custom detection rule.
//
//
union withsource=SourceTable IdentityLogonEvents, IdentityQueryEvents, IdentityDirectoryEvents, CloudAppEvents, AADSpnSignInEventsBeta, AADSignInEventsBeta
| where Application == "Microsoft 365"
| where ActionType in ("Add service principal credentials.", "Update application â€“ Certificates and secrets management ")
| project Timestamp, RawEventData, AccountDisplayName, ActionType, AccountObjectId, ReportId
| extend ModifiedProperties = RawEventData.ModifiedProperties[0]
| extend NewValue = ModifiedProperties.NewValue, OldValue = ModifiedProperties.OldValue, Name = ModifiedProperties.Name
| project Timestamp, AccountDisplayName, ActionType, NewValue, OldValue, RawEventData, AccountObjectId, ReportId
| where (NewValue has "KeyType=Password" and OldValue !has "KeyType=Password" and OldValue has "AsymmetricX509Cert") or (NewValue has "AsymmetricX509Cert" and OldValue !has "AsymmetricX509Cert" and OldValue has "KeyType=Password")
| extend NewSecret = set_difference(todynamic(parse_json(tostring(NewValue))), todynamic(parse_json(tostring(OldValue))))
| project Timestamp,ActionType,ActorType = RawEventData.Actor[-1].ID, ObjectId = RawEventData.Actor[-2].ID, AccountDisplayName, AccountObjectId, AppnName = RawEventData.Target[3].ID, AppObjectId = RawEventData.Target[1].ID, NewSecret = NewSecret[0], RawEventData, ReportId

